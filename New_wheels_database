USE new_wheels;

/*-- QUESTIONS RELATED TO CUSTOMERS
     [Q1] What is the distribution of customers across states?*/

SELECT
	DISTINCT state,
	COUNT(customer_id) AS total_customers,
    COUNT(case when gender='Male' then 1 end) as male_count,
	COUNT(case when gender='Female' then 1 end) as female_count
FROM customer_t
GROUP BY state
ORDER BY 2 DESC;

/* [Q2] What is the average rating in each quarter?
-- Very Bad is 1, Bad is 2, Okay is 3, Good is 4, Very Good is 5.*/

WITH quarter_ranking AS 
(
SELECT 
	quarter_number,
	customer_feedback,
    CASE WHEN customer_feedback = 'Very Bad' THEN 1
    WHEN customer_feedback = 'Bad' THEN 2
    WHEN customer_feedback = 'Okay' THEN 3
    WHEN customer_feedback = 'Good' THEN 4
    WHEN customer_feedback = 'Very Good' THEN 5
    END AS customer_ratings
FROM order_t
ORDER BY quarter_number, customer_ratings
)
SELECT 
	quarter_number,
    AVG(customer_ratings) as avg_quarter_ranking
FROM quarter_ranking
GROUP BY quarter_number
ORDER BY quarter_number;

/* [Q3] Are customers getting more dissatisfied over time?*/

WITH satisfaction_ranking AS
(
SELECT 
    quarter_number,
    count(customer_feedback) AS total_feedback,
    COUNT(case when customer_feedback='Very Bad' then 1 end) as very_bad_cnt,
	COUNT(case when customer_feedback='Bad' then 1 end) as bad_cnt,
	COUNT(case when customer_feedback='Okay' then 1 end) as okay_cnt,
	COUNT(case when customer_feedback='Good' then 1 end) as good_cnt,
	COUNT(case when customer_feedback='Very Good' then 1 end) as very_good_cnt
FROM order_t
GROUP BY quarter_number
ORDER BY quarter_number
)
SELECT 
	quarter_number, 
	(very_bad_cnt/total_feedback) * 100 AS very_bad,
    (bad_cnt/total_feedback) * 100 AS bad,
    (okay_cnt/total_feedback) * 100 AS okay,
    (good_cnt/total_feedback) * 100 AS good,
    (very_good_cnt/total_feedback) * 100 AS very_good
FROM satisfaction_ranking;

/*[Q4] Which are the top 5 vehicle makers preferred by the customer.*/
SELECT 
	DISTINCT COUNT(customer_id) AS total_customers,
    vehicle_maker
FROM order_t
	LEFT JOIN product_t
    ON order_t.product_id = product_t.product_id
GROUP BY vehicle_maker
ORDER BY total_customers DESC
LIMIT 5;

/*[Q5] What is the most preferred vehicle make in each state?*/
CREATE TEMPORARY TABLE vehicle_count AS
SELECT 
    COUNT(customer_id) as total_customers,
    state,
    vehicle_maker
FROM order_t 
INNER JOIN customer_t USING(customer_id) 
INNER JOIN product_t USING(product_id)
GROUP BY 2,3
ORDER BY 2, total_customers DESC;
WITH vehicle_ranks AS(
SELECT *,
	RANK() OVER(PARTITION BY state ORDER BY total_customers DESC) AS rnk
FROM vehicle_count)
SELECT *
FROM vehicle_ranks
WHERE rnk = 1;


/*QUESTIONS RELATED TO REVENUE and ORDERS 

-- [Q6] What is the trend of number of orders by quarters?*/
SELECT 
	quarter_number,
    COUNT(order_id)
FROM order_t
GROUP BY quarter_number
ORDER BY 2 DESC;


/* [Q7] What is the quarter over quarter % change in revenue? */
WITH quarter_cte AS (
    SELECT 
        quarter_number,
        SUM(quantity * vehicle_price) AS total_revenue
    FROM 
        order_t
    GROUP BY 
        quarter_number
)
SELECT 
    *,
    (total_revenue - LAG(total_revenue) OVER (ORDER BY quarter_number)) / LAG(total_revenue) OVER (ORDER BY quarter_number) * 100 AS qoq_percentage_change
FROM 
    quarter_cte;

/* [Q8] What is the trend of revenue and orders by quarters?*/
SELECT 
	quarter_number,
	COUNT(order_id) AS total_orders,
    SUM(quantity * vehicle_price) AS total_revenue
FROM order_t
GROUP BY quarter_number
ORDER BY 1;


/* QUESTIONS RELATED TO SHIPPING 
    [Q9] What is the average discount offered for different types of credit cards?*/
WITH card_details AS(
SELECT 
	c.customer_id,
	c.credit_card_type AS card_type,
    o.discount as discount
FROM customer_t c INNER JOIN order_t o USING(customer_id))
SELECT 
	card_type,
    AVG(discount)
FROM card_details
GROUP BY card_type
ORDER BY 2 DESC;

/* [Q10] What is the average time taken to ship the placed orders for each quarters?*/
WITH order_shipping AS(
SELECT 
	order_id,
    quarter_number,
    order_date,
    ship_date
FROM order_t
ORDER BY 2
)
SELECT 
	quarter_number,
    AVG(DATEDIFF(ship_date, order_date)) AS average_days_to_ship
FROM order_shipping
GROUP BY 1
ORDER BY 1
